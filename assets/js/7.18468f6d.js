(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{276:function(a,t,s){a.exports=s.p+"assets/img/f4f912714826d55f8e73d9b767f4a088.f4f91271.png"},277:function(a,t,s){a.exports=s.p+"assets/img/8f0481849c081a24edc4a502224161e5.8f048184.png"},278:function(a,t,s){a.exports=s.p+"assets/img/3bd5c434221f90b9ea8c636eda70ccf3.3bd5c434.png"},279:function(a,t,s){a.exports=s.p+"assets/img/87a90b140ec0d5987a284daa8abd19cf.87a90b14.png"},280:function(a,t,s){a.exports=s.p+"assets/img/d0011b67a73a9e14312423b01c73fcfb.d0011b67.png"},281:function(a,t,s){a.exports=s.p+"assets/img/7f02cd43f77aa9e1cd511d5e443b3bdf.7f02cd43.png"},282:function(a,t,s){a.exports=s.p+"assets/img/1df108aa9f36e24f4f7958f5fe999189.1df108aa.png"},283:function(a,t,s){a.exports=s.p+"assets/img/0edd4afd935217ae92566ab83893fae8.0edd4afd.png"},284:function(a,t,s){a.exports=s.p+"assets/img/d58e637f465efc9ac6a115a7077d477a.d58e637f.png"},285:function(a,t,s){a.exports=s.p+"assets/img/220ca8476484163f0a3de41b90ad84be.220ca847.png"},286:function(a,t,s){a.exports=s.p+"assets/img/ac01a7b46880bb75a0764b30bbbf38bb.ac01a7b4.png"},391:function(a,t,s){"use strict";s.r(t);var e=s(14),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"constructing-simple-graphs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructing-simple-graphs"}},[a._v("#")]),a._v(" Constructing Simple Graphs")]),a._v(" "),t("h2",{attrs:{id:"connect-3-nodes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#connect-3-nodes"}},[a._v("#")]),a._v(" Connect 3 Nodes")]),a._v(" "),t("p",[a._v("Next, lets expand upon the graph we just created to have additional relationships. Assume that:")]),a._v(" "),t("ul",[t("li",[a._v("'a' is related to 'b' (already drawn)")]),a._v(" "),t("li",[a._v("'b' is related to 'c'")]),a._v(" "),t("li",[a._v("'c' is related to 'a'")])]),a._v(" "),t("p",[a._v("The Excel data appears as shown on rows 3-5. Press the "),t("code",[a._v("Refresh Graph")]),a._v(" button, and the Excel worksheet now looks like:")]),a._v(" "),t("p",[t("img",{attrs:{src:s(276),alt:""}})]),a._v(" "),t("p",[t("em",[a._v("Graphviz Source")])]),a._v(" "),t("div",{staticClass:"language-dot extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dot"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("strict")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("digraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"main"')]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("layout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"dot"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rankdir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"TB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a"')]),a._v(" -\\> "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"b"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"b"')]),a._v(" -\\> "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"c"')]),a._v(" -\\> "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n")])])]),t("h2",{attrs:{id:"add-edge-labels"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-edge-labels"}},[a._v("#")]),a._v(" Add Edge Labels")]),a._v(" "),t("p",[a._v("Now, let us add data into the "),t("code",[a._v("Label")]),a._v(" column to label the relationships. Fill in Column D as shown below. Press the "),t("code",[a._v("Refresh Graph")]),a._v(" button, and the Excel worksheet now looks like:")]),a._v(" "),t("p",[t("img",{attrs:{src:s(277),alt:""}})]),a._v(" "),t("p",[t("em",[a._v("Graphviz Source")])]),a._v(" "),t("div",{staticClass:"language-dot extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dot"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("strict")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("digraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"main"')]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("layout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"dot"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rankdir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"TB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a"')]),a._v(" -\\> "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"b"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"is related to"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"b"')]),a._v(" -\\> "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"is related to"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"c"')]),a._v(" -\\> "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"is related to"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h2",{attrs:{id:"add-node-labels"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-node-labels"}},[a._v("#")]),a._v(" Add Node Labels")]),a._v(" "),t("p",[a._v("The graph is how we want to see it, but the nodes need to be labeled. We do not want to change all our edges; however, we would like to replace 'a' with 'Alpha', 'b' with 'Bravo', and 'c' with 'Charlie'. The Relationship Visualizer assumes that when there is information in the "),t("code",[a._v("Item")]),a._v(" column, but not in the "),t("code",[a._v("Related Item")]),a._v(" column that the data corresponds to a node.")]),a._v(" "),t("p",[a._v('To label the nodes we will add 3 node definitions to the "data worksheet (rows 6, 7, 8) and press the '),t("code",[a._v("Refresh Graph")]),a._v(" button. The Excel worksheet now looks like:")]),a._v(" "),t("p",[t("img",{attrs:{src:s(278),alt:""}})]),a._v(" "),t("p",[t("em",[a._v("Graphviz Source")])]),a._v(" "),t("div",{staticClass:"language-dot extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dot"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("strict")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("digraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"main"')]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("layout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"dot"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rankdir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"TB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a"')]),a._v(" -\\> "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"b"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"is related to"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"b"')]),a._v(" -\\> "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"is related to"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"c"')]),a._v(" -\\> "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"is related to"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"Alpha"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"b"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"Bravo"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"Charlie"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h2",{attrs:{id:"specify-ports"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#specify-ports"}},[a._v("#")]),a._v(" Specify Ports")]),a._v(" "),t("p",[a._v("Graphviz decides what it thinks is the best placement of the head and tail of an edge to produce a balanced graph.")]),a._v(" "),t("p",[a._v("Sometimes you might want to control where the edges begin or end. You can do that by specifying a port on the "),t("code",[a._v("Item")]),a._v(" or "),t("code",[a._v("Related Item")]),a._v(" ID, in the same manner as a URL. Ports are identified by a colon character "),t("code",[a._v(":")]),a._v(" and then a compass point "),t("code",[a._v("n")]),a._v(", "),t("code",[a._v("s")]),a._v(", "),t("code",[a._v("e")]),a._v(", "),t("code",[a._v("w")]),a._v(", "),t("code",[a._v("ne")]),a._v(", "),t("code",[a._v("nw")]),a._v(", "),t("code",[a._v("se")]),a._v(", "),t("code",[a._v("sw")]),a._v(" or "),t("code",[a._v("c")]),a._v(" for center.")]),a._v(" "),t("p",[a._v('If we change row 5 from the example above to have the edge from "c" to "a" exit from the south port of "c", the '),t("code",[a._v("Item")]),a._v(" is now specified as "),t("code",[a._v("c:s")]),a._v(", and the Excel data is changed slightly as shown in row 5. Press the "),t("code",[a._v("Refresh Graph")]),a._v(" button, and the Excel worksheet now looks like:")]),a._v(" "),t("p",[t("img",{attrs:{src:s(279),alt:""}})]),a._v(" "),t("p",[t("em",[a._v("Graphviz Source")])]),a._v(" "),t("div",{staticClass:"language-dot extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dot"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("strict")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("digraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"main"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("layout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"dot"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rankdir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"TB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"b"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"is related to"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"b"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"is related to"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"c"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"s"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"is related to"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"Alpha"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"b"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"Bravo"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"Charlie"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h2",{attrs:{id:"specify-clusters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#specify-clusters"}},[a._v("#")]),a._v(" Specify Clusters")]),a._v(" "),t("p",[a._v('If you wish to cluster some elements of the graph you can do so by adding a row with an open brace "{" in the '),t("code",[a._v("Item")]),a._v(" column above the first row of data to be placed in the group and provide a title for the cluster in the "),t("code",[a._v("Label")]),a._v(' column. Next, add row with a close brace "}" in the '),t("code",[a._v("Item")]),a._v(" column after the last row of data.")]),a._v(" "),t("p",[a._v("For example, this Excel worksheet does not have clusters.")]),a._v(" "),t("p",[t("img",{attrs:{src:s(280),alt:""}})]),a._v(" "),t("p",[t("em",[a._v("Graphviz Source")])]),a._v(" "),t("div",{staticClass:"language-dot extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dot"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("strict")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("digraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"main"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("layout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"dot"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rankdir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"TB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"start"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a0"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a1"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a2"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"end"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v('To cluster nodes a0, a1, and a2, calling the cluster "process #1" the worksheet is revised to add an open brace {with the label "process #1" on row 3, and a close brace } on rows 6 as follows.')]),a._v(" "),t("p",[a._v("Press the "),t("code",[a._v("Refresh Graph")]),a._v(" button, and the Excel worksheet now looks like:")]),a._v(" "),t("p",[t("img",{attrs:{src:s(281),alt:""}})]),a._v(" "),t("p",[t("em",[a._v("Graphviz Source")])]),a._v(" "),t("div",{staticClass:"language-dot extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dot"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("strict")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("digraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"main"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("layout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"dot"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rankdir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"TB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"start"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("subgraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"cluster_1"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"process #1"')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a0"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a1"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a2"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"end"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h2",{attrs:{id:"specify-clusters-within-clusters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#specify-clusters-within-clusters"}},[a._v("#")]),a._v(" Specify Clusters Within Clusters")]),a._v(" "),t("p",[a._v("Graphviz permits clusters within clusters. Let us extend the example by adding an additional set of braces to cluster the relationship between a1 and a2. We will insert a new row 5 placing an open brace { in the "),t("code",[a._v("Item")]),a._v(' column with the Label column set to "process #2", and a new row 7 with a close brace } in the '),t("code",[a._v("Item")]),a._v(" column.")]),a._v(" "),t("p",[a._v("Press the "),t("code",[a._v("Refresh Graph")]),a._v(" button, and the Excel worksheet now looks like:")]),a._v(" "),t("p",[t("img",{attrs:{src:s(282),alt:""}})]),a._v(" "),t("p",[t("em",[a._v("Graphviz Source")])]),a._v(" "),t("div",{staticClass:"language-dot extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dot"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("strict")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("digraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"main"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("layout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"dot"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rankdir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"TB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"start"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("subgraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"cluster_1"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"process #1"')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a0"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("subgraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"cluster_2"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"process #2"')]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a1"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a2"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"end"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v('Graphviz does not limit the number of clusters you can have. In this example, we have added rows 10-14 to insert an additional cluster labeled "process #3".')]),a._v(" "),t("p",[a._v("Press the "),t("code",[a._v("Refresh Graph")]),a._v(" button, and the Excel worksheet now looks like:")]),a._v(" "),t("p",[t("img",{attrs:{src:s(283),alt:""}})]),a._v(" "),t("p",[t("em",[a._v("Graphviz Source")])]),a._v(" "),t("div",{staticClass:"language-dot extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dot"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("strict")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("digraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"main"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("layout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"dot"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rankdir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"TB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"start"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("subgraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"cluster_1"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"process #1"')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a0"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("subgraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"cluster_2"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"process #2"')]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a1"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"a2"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"end"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"start"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"b0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("subgraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"cluster_3"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"process #3"')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"b0"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"b1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"b1"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"end"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("What is important to note is that you must ensure that you have an equal number of open braces as you do close braces. "),t("strong",[a._v("If you have a mismatch between the number of open and close braces, then Graphviz will not draw the graph.")])]),a._v(" "),t("h2",{attrs:{id:"specify-comma-separated-items"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#specify-comma-separated-items"}},[a._v("#")]),a._v(" Specify Comma-separated Items")]),a._v(" "),t("p",[a._v("Another feature of the Relationship Visualizer is the ability to specify a comma-separated list of Item names and have a relationship created for each Item. For example, we can say that Mr. Brady is the father of Greg, Peter, and Bobby on one row as follows:")]),a._v(" "),t("p",[t("img",{attrs:{src:s(284),alt:""}})]),a._v(" "),t("p",[t("em",[a._v("Graphviz Source")])]),a._v(" "),t("div",{staticClass:"language-dot extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dot"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("strict")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("digraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"main"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("layout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"dot"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rankdir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"TB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mr. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Greg"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"Father of"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mr. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Peter"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"Father of"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mr. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Bobby"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"Father of"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("The comma-separated list can also appear in the "),t("code",[a._v("Item")]),a._v(" column, such as:")]),a._v(" "),t("p",[t("img",{attrs:{src:s(285),alt:""}})]),a._v(" "),t("p",[t("em",[a._v("Graphviz Source")])]),a._v(" "),t("div",{staticClass:"language-dot extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dot"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("strict")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("digraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"main"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("layout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"dot"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rankdir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"TB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Marcia"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mrs. Brady"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"Daughter of"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Jan"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mrs. Brady"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"Daughter of"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Cindy"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mrs. Brady"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"Daughter of"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("Or a comma-separated list can be used in both the "),t("code",[a._v("Item")]),a._v(", and the "),t("code",[a._v("Related Item")]),a._v(" column such as the parental relationship below:")]),a._v(" "),t("p",[t("img",{attrs:{src:s(286),alt:""}})]),a._v(" "),t("p",[t("em",[a._v("Graphviz Source")])]),a._v(" "),t("div",{staticClass:"language-dot extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dot"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("strict")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("digraph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token graph-name class-name"}},[a._v('"main"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("layout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"dot"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rankdir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[a._v('"TB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        \n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mr. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Greg"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mr. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Peter"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mr. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Bobby"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mr. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Marcia"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mr. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Jan"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mr. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Cindy"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mrs. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Greg"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mrs. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Peter"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mrs. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Bobby"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mrs. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Marcia"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mrs. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Jan"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Mrs. Brady"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token node"}},[a._v('"Cindy"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);