<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 11.0.0 (20240428.1522)
 -->
<!-- Title: Relationship Visualizer Pages: 1 -->
<svg width="687pt" height="699pt"
 viewBox="0.00 0.00 687.09 698.50" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" onload="addInteractivity(evt)">
  <!-- NOTE: The graphviz-generated content in this file has been modified by Excel to Graphviz Version: 7.0.00 (Win + macOS) -->

<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 694.5)">
<title>Relationship Visualizer</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-694.5 683.09,-694.5 683.09,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_1</title>
<g id="a_clust1"><a xlink:title="Component Interface Overview">
<polygon fill="none" stroke="black" stroke-width="2" points="0,0 0,-690.5 679.09,-690.5 679.09,0 0,0"/>
<text text-anchor="middle" x="339.54" y="-671.3" font-family="Arial Bold" font-size="16.00">Component Interface Overview</text>
</a>
</g>
</g>
<g id="clust2" class="cluster">
<title>cluster_2</title>
<g id="a_clust2"><a xlink:title="Customer">
<polygon fill="#fee0d2" stroke="black" points="247,-554 247,-658.5 431.01,-658.5 431.01,-554 247,-554"/>
<text text-anchor="middle" x="339.01" y="-643.1" font-family="Arial Bold" font-size="12.00">Customer</text>
</a>
</g>
</g>
<g id="clust3" class="cluster">
<title>cluster_3</title>
<g id="a_clust3"><a xlink:title="Customer">
<polygon fill="#deebf7" stroke="black" points="253,-560 253,-630.25 425.01,-630.25 425.01,-560 253,-560"/>
<text text-anchor="middle" x="339.01" y="-614.85" font-family="Arial Bold" font-size="12.00">Customer</text>
</a>
</g>
</g>
<g id="clust4" class="cluster">
<title>cluster_4</title>
<g id="a_clust4"><a xlink:title="DMZ">
<polygon fill="#fee0d2" stroke="black" points="221,-437 221,-541.5 458.08,-541.5 458.08,-437 221,-437"/>
<text text-anchor="middle" x="339.54" y="-526.1" font-family="Arial Bold" font-size="12.00">DMZ</text>
</a>
</g>
</g>
<g id="clust5" class="cluster">
<title>cluster_5</title>
<g id="a_clust5"><a xlink:title="Infra">
<polygon fill="#deebf7" stroke="black" points="227,-443 227,-513.25 452.08,-513.25 452.08,-443 227,-443"/>
<text text-anchor="middle" x="339.54" y="-497.85" font-family="Arial Bold" font-size="12.00">Infra</text>
</a>
</g>
</g>
<g id="clust6" class="cluster">
<title>cluster_6</title>
<g id="a_clust6"><a xlink:title="User Interaction">
<polygon fill="#fee0d2" stroke="black" points="6,-239 6,-425.5 673.09,-425.5 673.09,-239 6,-239"/>
<text text-anchor="middle" x="339.54" y="-410.1" font-family="Arial Bold" font-size="12.00">User Interaction</text>
</a>
</g>
</g>
<g id="clust7" class="cluster">
<title>cluster_7</title>
<g id="a_clust7"><a xlink:title="comms">
<polygon fill="#deebf7" stroke="black" points="12,-327 12,-397.25 367.02,-397.25 367.02,-327 12,-327"/>
<text text-anchor="middle" x="189.51" y="-381.85" font-family="Arial Bold" font-size="12.00">comms</text>
</a>
</g>
</g>
<g id="clust8" class="cluster">
<title>cluster_8</title>
<g id="a_clust8"><a xlink:title="ordering">
<polygon fill="#e5f5e0" stroke="black" points="379,-327 379,-397.25 522.07,-397.25 522.07,-327 379,-327"/>
<text text-anchor="middle" x="450.53" y="-381.85" font-family="Arial Bold" font-size="12.00">ordering</text>
</a>
</g>
</g>
<g id="clust9" class="cluster">
<title>cluster_9</title>
<g id="a_clust9"><a xlink:title="Support">
<polygon fill="#f0f0f0" stroke="black" points="534,-327 534,-397.25 667.09,-397.25 667.09,-327 534,-327"/>
<text text-anchor="middle" x="600.54" y="-381.85" font-family="Arial Bold" font-size="12.00">Support</text>
</a>
</g>
</g>
<g id="clust10" class="cluster">
<title>cluster_10</title>
<g id="a_clust10"><a xlink:title="UI">
<polygon fill="#fee6ce" stroke="black" points="71,-245 71,-315.25 366.05,-315.25 366.05,-245 71,-245"/>
<text text-anchor="middle" x="218.52" y="-299.85" font-family="Arial Bold" font-size="12.00">UI</text>
</a>
</g>
</g>
<g id="clust11" class="cluster">
<title>cluster_11</title>
<g id="a_clust11"><a xlink:title="workflow">
<polygon fill="#fee0d2" stroke="black" points="156,-122 156,-226.5 522.94,-226.5 522.94,-122 156,-122"/>
<text text-anchor="middle" x="339.47" y="-211.1" font-family="Arial Bold" font-size="12.00">workflow</text>
</a>
</g>
</g>
<g id="clust12" class="cluster">
<title>cluster_12</title>
<g id="a_clust12"><a xlink:title="ordering">
<polygon fill="#deebf7" stroke="black" points="162,-128 162,-198.25 516.94,-198.25 516.94,-128 162,-128"/>
<text text-anchor="middle" x="339.47" y="-182.85" font-family="Arial Bold" font-size="12.00">ordering</text>
</a>
</g>
</g>
<g id="clust13" class="cluster">
<title>cluster_13</title>
<g id="a_clust13"><a xlink:title="Systems of Record">
<polygon fill="#fee0d2" stroke="black" points="105,-6 105,-110.5 572.9,-110.5 572.9,-6 105,-6"/>
<text text-anchor="middle" x="338.95" y="-95.1" font-family="Arial Bold" font-size="12.00">Systems of Record</text>
</a>
</g>
</g>
<g id="clust14" class="cluster">
<title>cluster_14</title>
<g id="a_clust14"><a xlink:title="CRM">
<polygon fill="#deebf7" stroke="black" points="111,-12 111,-82.25 328.92,-82.25 328.92,-12 111,-12"/>
<text text-anchor="middle" x="219.96" y="-66.85" font-family="Arial Bold" font-size="12.00">CRM</text>
</a>
</g>
</g>
<g id="clust15" class="cluster">
<title>cluster_15</title>
<g id="a_clust15"><a xlink:title="ordering">
<polygon fill="#e5f5e0" stroke="black" points="340,-12 340,-82.25 566.9,-82.25 566.9,-12 340,-12"/>
<text text-anchor="middle" x="453.45" y="-66.85" font-family="Arial Bold" font-size="12.00">ordering</text>
</a>
</g>
</g>
<!-- Customer browser -->
<g id="node1" class="node">
<title>Customer browser</title>
<g id="a_node1"><a xlink:title="Customer browser">
<ellipse fill="none" stroke="black" cx="339.01" cy="-584" rx="80.01" ry="18"/>
<text text-anchor="middle" x="339.01" y="-578.58" font-family="Times New Roman,serif" font-size="14.00">Customer browser</text>
</a>
</g>
</g>
<!-- firewall -->
<g id="node2" class="node">
<title>firewall</title>
<g id="a_node2"><a xlink:title="firewall">
<ellipse fill="none" stroke="black" cx="270.09" cy="-467" rx="37.09" ry="18"/>
<text text-anchor="middle" x="270.09" y="-461.57" font-family="Times New Roman,serif" font-size="14.00">firewall</text>
</a>
</g>
</g>
<!-- Customer browser&#45;&gt;firewall -->
<g id="edge11" class="edge">
<title>Customer browser&#45;&gt;firewall</title>
<g id="a_edge11"><a xlink:title="infra: http traffic">
<path fill="none" stroke="black" d="M283.09,-571.03C283.09,-571.03 283.09,-495.7 283.09,-495.7"/>
<polygon fill="black" stroke="black" points="286.59,-495.7 283.09,-485.7 279.59,-495.7 286.59,-495.7"/>
</a>
</g>
</g>
<!-- Load balancer -->
<g id="node3" class="node">
<title>Load balancer</title>
<g id="a_node3"><a xlink:title="Load balancer">
<ellipse fill="none" stroke="black" cx="382.54" cy="-467" rx="63.54" ry="18"/>
<text text-anchor="middle" x="382.54" y="-461.57" font-family="Times New Roman,serif" font-size="14.00">Load balancer</text>
</a>
</g>
</g>
<!-- firewall&#45;&gt;Load balancer -->
<g id="edge12" class="edge">
<title>firewall&#45;&gt;Load balancer</title>
<g id="a_edge12"><a xlink:title="infra: http traffic">
<path fill="none" stroke="black" d="M307.54,-467C307.54,-467 308.64,-467 308.64,-467"/>
<polygon fill="black" stroke="black" points="307.03,-470.5 317.03,-467 307.03,-463.5 307.03,-470.5"/>
</a>
</g>
</g>
<!-- Customer portal -->
<g id="node9" class="node">
<title>Customer portal</title>
<g id="a_node9"><a xlink:title="Customer portal">
<ellipse fill="none" stroke="black" cx="289.02" cy="-269" rx="71.02" ry="18"/>
<text text-anchor="middle" x="289.02" y="-263.57" font-family="Times New Roman,serif" font-size="14.00">Customer portal</text>
</a>
</g>
</g>
<!-- Load balancer&#45;&gt;Customer portal -->
<g id="edge13" class="edge">
<title>Load balancer&#45;&gt;Customer portal</title>
<g id="a_edge13"><a xlink:title="infra: http traffic">
<path fill="none" stroke="black" d="M373.01,-448.88C373.01,-401.57 373.01,-278 373.01,-278 373.01,-278 362.9,-278 362.9,-278"/>
<polygon fill="black" stroke="black" points="362.9,-274.5 352.9,-278 362.9,-281.5 362.9,-274.5"/>
</a>
</g>
</g>
<!-- software downloader -->
<g id="node4" class="node">
<title>software downloader</title>
<g id="a_node4"><a xlink:title="software downloader">
<ellipse fill="none" stroke="black" cx="106.99" cy="-351" rx="88.99" ry="18"/>
<text text-anchor="middle" x="106.99" y="-345.57" font-family="Times New Roman,serif" font-size="14.00">software downloader</text>
</a>
</g>
</g>
<!-- notification center -->
<g id="node5" class="node">
<title>notification center</title>
<g id="a_node5"><a xlink:title="notification center">
<ellipse fill="none" stroke="black" cx="284.01" cy="-351" rx="77.01" ry="18"/>
<text text-anchor="middle" x="284.01" y="-345.57" font-family="Times New Roman,serif" font-size="14.00">notification center</text>
</a>
</g>
</g>
<!-- order approval -->
<g id="node6" class="node">
<title>order approval</title>
<g id="a_node6"><a xlink:title="order approval">
<ellipse fill="none" stroke="black" cx="450.53" cy="-351" rx="65.53" ry="18"/>
<text text-anchor="middle" x="450.53" y="-345.57" font-family="Times New Roman,serif" font-size="14.00">order approval</text>
</a>
</g>
</g>
<!-- order workflow -->
<g id="node10" class="node">
<title>order workflow</title>
<g id="a_node10"><a xlink:title="order workflow">
<ellipse fill="none" stroke="black" cx="236.53" cy="-152" rx="68.53" ry="18"/>
<text text-anchor="middle" x="236.53" y="-146.57" font-family="Times New Roman,serif" font-size="14.00">order workflow</text>
</a>
</g>
</g>
<!-- order approval&#45;&gt;order workflow -->
<g id="edge3" class="edge">
<title>order approval&#45;&gt;order workflow</title>
<g id="a_edge3"><a xlink:title="REST API: approve order">
<path fill="none" stroke="black" d="M416.49,-335.18C416.49,-302.38 416.49,-230 416.49,-230 416.49,-230 283.29,-230 283.29,-230 283.29,-230 283.29,-177.1 283.29,-177.1"/>
<polygon fill="black" stroke="black" points="286.79,-177.1 283.29,-167.1 279.79,-177.1 286.79,-177.1"/>
</a>
</g>
</g>
<!-- Salesforce CRM module -->
<g id="node12" class="node">
<title>Salesforce CRM module</title>
<g id="a_node12"><a xlink:title="Salesforce CRM module">
<ellipse fill="none" stroke="black" cx="219.96" cy="-36" rx="102.96" ry="18"/>
<text text-anchor="middle" x="219.96" y="-30.57" font-family="Times New Roman,serif" font-size="14.00">Salesforce CRM module</text>
</a>
</g>
</g>
<!-- order approval&#45;&gt;Salesforce CRM module -->
<g id="edge10" class="edge">
<title>order approval&#45;&gt;Salesforce CRM module</title>
<g id="a_edge10"><a xlink:title="REST API: Get customer relation overview">
<path fill="none" stroke="black" d="M479.46,-334.38C479.46,-293.24 479.46,-190 479.46,-190 479.46,-190 311.03,-190 311.03,-190 311.03,-190 311.03,-56.23 311.03,-56.23"/>
<polygon fill="black" stroke="black" points="314.53,-56.23 311.03,-46.23 307.53,-56.23 314.53,-56.23"/>
</a>
</g>
</g>
<!-- Case Handler -->
<g id="node7" class="node">
<title>Case Handler</title>
<g id="a_node7"><a xlink:title="Case Handler">
<ellipse fill="none" stroke="black" cx="600.54" cy="-351" rx="60.54" ry="18"/>
<text text-anchor="middle" x="600.54" y="-345.57" font-family="Times New Roman,serif" font-size="14.00">Case Handler</text>
</a>
</g>
</g>
<!-- Case Handler&#45;&gt;notification center -->
<g id="edge8" class="edge">
<title>Case Handler&#45;&gt;notification center</title>
<g id="a_edge8"><a xlink:title="SOAP: sent case update event">
<path fill="none" stroke="black" d="M546.97,-342.3C546.97,-330.27 546.97,-310 546.97,-310 546.97,-310 312.7,-310 312.7,-310 312.7,-310 312.7,-322.34 312.7,-322.34"/>
<polygon fill="black" stroke="black" points="309.2,-322.34 312.7,-332.34 316.2,-322.34 309.2,-322.34"/>
</a>
</g>
</g>
<!-- Public website -->
<g id="node8" class="node">
<title>Public website</title>
<g id="a_node8"><a xlink:title="Public website">
<ellipse fill="none" stroke="black" cx="141.54" cy="-269" rx="64.54" ry="18"/>
<text text-anchor="middle" x="141.54" y="-263.57" font-family="Times New Roman,serif" font-size="14.00">Public website</text>
</a>
</g>
</g>
<!-- Customer portal&#45;&gt;notification center -->
<g id="edge9" class="edge">
<title>Customer portal&#45;&gt;notification center</title>
<g id="a_edge9"><a xlink:title="SOAP: get notifications">
<path fill="none" stroke="black" d="M265.35,-286.39C265.35,-286.39 265.35,-321.55 265.35,-321.55"/>
<polygon fill="black" stroke="black" points="261.85,-321.55 265.35,-331.55 268.85,-321.55 261.85,-321.55"/>
</a>
</g>
</g>
<!-- Customer portal&#45;&gt;Case Handler -->
<g id="edge7" class="edge">
<title>Customer portal&#45;&gt;Case Handler</title>
<g id="a_edge7"><a xlink:title="REST API: get support case overview">
<path fill="none" stroke="black" d="M360.36,-269C438.83,-269 553.93,-269 553.93,-269 553.93,-269 553.93,-327.74 553.93,-327.74"/>
<polygon fill="black" stroke="black" points="550.43,-327.74 553.93,-337.74 557.43,-327.74 550.43,-327.74"/>
</a>
</g>
</g>
<!-- Customer portal&#45;&gt;order workflow -->
<g id="edge1" class="edge">
<title>Customer portal&#45;&gt;order workflow</title>
<g id="a_edge1"><a xlink:title="REST API: trigger ordering process">
<path fill="none" stroke="black" d="M239.76,-256.03C239.76,-256.03 239.76,-181.91 239.76,-181.91"/>
<polygon fill="black" stroke="black" points="243.26,-181.91 239.76,-171.91 236.26,-181.91 243.26,-181.91"/>
</a>
</g>
</g>
<!-- order management system -->
<g id="node13" class="node">
<title>order management system</title>
<g id="a_node13"><a xlink:title="order management system">
<ellipse fill="none" stroke="black" cx="453.45" cy="-36" rx="107.45" ry="18"/>
<text text-anchor="middle" x="453.45" y="-30.57" font-family="Times New Roman,serif" font-size="14.00">order management system</text>
</a>
</g>
</g>
<!-- Customer portal&#45;&gt;order management system -->
<g id="edge5" class="edge">
<title>Customer portal&#45;&gt;order management system</title>
<g id="a_edge5"><a xlink:title="REST API: get order overview">
<path fill="none" stroke="black" d="M351.51,-260C422.33,-260 528.03,-260 528.03,-260 528.03,-260 528.03,-60.85 528.03,-60.85"/>
<polygon fill="black" stroke="black" points="531.53,-60.85 528.03,-50.85 524.53,-60.85 531.53,-60.85"/>
</a>
</g>
</g>
<!-- order workflow&#45;&gt;order approval -->
<g id="edge2" class="edge">
<title>order workflow&#45;&gt;order approval</title>
<g id="a_edge2"><a xlink:title="REST API: request approval of order">
<path fill="none" stroke="black" d="M261.53,-169.09C261.53,-186.2 261.53,-210 261.53,-210 261.53,-210 447.97,-210 447.97,-210 447.97,-210 447.97,-321.05 447.97,-321.05"/>
<polygon fill="black" stroke="black" points="444.47,-321.05 447.97,-331.05 451.47,-321.05 444.47,-321.05"/>
</a>
</g>
</g>
<!-- order activation system -->
<g id="node11" class="node">
<title>order activation system</title>
<g id="a_node11"><a xlink:title="order activation system">
<ellipse fill="none" stroke="black" cx="413.97" cy="-152" rx="96.97" ry="18"/>
<text text-anchor="middle" x="413.97" y="-146.57" font-family="Times New Roman,serif" font-size="14.00">order activation system</text>
</a>
</g>
</g>
<!-- order workflow&#45;&gt;order activation system -->
<g id="edge4" class="edge">
<title>order workflow&#45;&gt;order activation system</title>
<g id="a_edge4"><a xlink:title="REST API: initiate activation of the customer">
<path fill="none" stroke="black" d="M305.39,-152C305.39,-152 306.51,-152 306.51,-152"/>
<polygon fill="black" stroke="black" points="305.1,-155.5 315.1,-152 305.1,-148.5 305.1,-155.5"/>
</a>
</g>
</g>
<!-- order workflow&#45;&gt;order management system -->
<g id="edge6" class="edge">
<title>order workflow&#45;&gt;order management system</title>
<g id="a_edge6"><a xlink:title="REST API: update order">
<path fill="none" stroke="black" d="M236.53,-133.65C236.53,-116.66 236.53,-94 236.53,-94 236.53,-94 428.47,-94 428.47,-94 428.47,-94 428.47,-65.23 428.47,-65.23"/>
<polygon fill="black" stroke="black" points="431.97,-65.23 428.47,-55.23 424.97,-65.23 431.97,-65.23"/>
</a>
</g>
</g>
</g>

<!-- Excel to Graphviz - Begin -->
<style>

<!-- The first 2 styles are hiding longer description texts on 
     nodes and edges, that are shown when nodes are clicked 
.edge text{
    opacity: 0;
}
.node text:not(:first-of-type){
    opacity: 0;
}-->
.text-highlight-nodes text{
    opacity: 1 !important;
    stroke-width: 10;
    font-size: 20px;
    font-weight: bold;
    fill: black;
}
.text-highlight-edges text{
    opacity: 1 !important;
    stroke-width: 10;
    font-size: 20px;
    font-weight: bold;
    fill: Indigo;
}
.edge-highlight path{
    opacity: 1;
    stroke-width: 10;
    stroke: crimson;
}	
.edge-highlight polygon{
    opacity: 1;
    stroke-width: 10;
    stroke: crimson;
}
.node-highlight polygon{
    opacity: 1;
    stroke-width: 10;
    stroke: crimson;
    z-index:99999;	
}
.node-highlight ellipse{
    opacity: 1;
    stroke-width: 10;
    stroke: crimson;
    z-index:99999;	
}
.node-highlight path{
    opacity: 1;
    stroke-width: 10;
    stroke: crimson;
    z-index:99999;	
}
 .compass {
            fill: #fff;
            stroke: #000;
            stroke-width: 1;
        }
 .button {
            fill: #225EA8;
            stroke: #0C2C84;
            stroke-width: 0.5;
            stroke-miterlimit:6;
            stroke-linecap: round;
        }
 .button:hover {
            stroke-width: 1;
        }
 .plus-minus {
            fill: #fff;
            pointer-events: none;
        }
</style>
<script>
<![CDATA[
function addInteractivity(evt) {
    
	var svg = evt.target;
    var edges = document.getElementsByClassName('edge');
    var nodes = document.getElementsByClassName('node');
	var clusters = document.getElementsByClassName('cluster');
    var selectedElement, offset, transform, nodrag, origmousepos;

    svg.addEventListener('mousedown', startDrag);
    svg.addEventListener('mousemove', drag);
    svg.addEventListener('mouseup', endDrag);
    svg.addEventListener('mouseleave', endDrag);
    svg.addEventListener('touchstart', startDrag);
    svg.addEventListener('touchmove', drag);
    svg.addEventListener('touchend', endDrag);
    svg.addEventListener('touchleave', endDrag);
    svg.addEventListener('touchcancel', endDrag);

    for (var i = 0; i < edges.length; i++) {
        edges[i].addEventListener('click', clickEdge);
    }

    for (var i = 0; i < nodes.length; i++) {
        nodes[i].addEventListener('click', clickNode);
    } 
   addToggleButtons(evt);
    
	for (var i = 0; i < clusters.length; i++) {
        addzoomers(clusters[i]);
    } 
    function getMousePosition(evt) {
        var CTM = svg.getScreenCTM();
        if (evt.touches) { evt = evt.touches[0]; }
            return {
                x: (evt.clientX - CTM.e) / CTM.a,
                y: (evt.clientY - CTM.f) / CTM.d
        };
    }
       function startDrag(evt) {
        origmousepos = getMousePosition(evt);
        nodrag=true;
        selectedElement = evt.target.parentElement;
        if (selectedElement){
        offset = getMousePosition(evt);

        // Make sure the first transform on the element is a translate transform
        var transforms = selectedElement.transform.baseVal;

        if (transforms.length === 0 || transforms.getItem(0).type !== SVGTransform.SVG_TRANSFORM_TRANSLATE) {
            // Create an transform that translates by (0, 0)
            var translate = svg.createSVGTransform();
            translate.setTranslate(0, 0);
            selectedElement.transform.baseVal.insertItemBefore(translate, 0);
        }

        // Get initial translation
        transform = transforms.getItem(0);
        offset.x -= transform.matrix.e;
        offset.y -= transform.matrix.f;
		}
    }
    function drag(evt) {
        if (selectedElement) {
            evt.preventDefault();
            var coord = getMousePosition(evt);
            transform.setTranslate(coord.x - offset.x, coord.y - offset.y);
        }
    }
    function endDrag(evt) {
    <!-- comment out the following line if you wnat drags to stay in place, with this line they snap back to their original position after drag end -->   
//if statement to avoid the header section being affected of the translate (0,0)
        if (selectedElement){
			if (selectedElement.classList.contains('header')){
				selectedElement = false;
				} else {
				selectedElement = false;
				transform.setTranslate(0,0);
				}
		}		
		var currentmousepos=getMousePosition(evt);
		if (currentmousepos.x===origmousepos.x|currentmousepos.y===origmousepos.y){
			nodrag=true;
		} else {
			nodrag=false;
		}
		
	}
    function clickEdge() {
        if (nodrag) {
            if (this.classList.contains("edge-highlight")){
                this.classList.remove("edge-highlight");
                this.classList.remove("text-highlight-edges");
            }
            else {
                this.classList.add("edge-highlight");
                this.classList.add("text-highlight-edges");
                animateEdge(this);
            }
        }	
    }
function clickNode() {
    if (nodrag) {
        var nodeName = this.childNodes[1].textContent;
        // Escape special characters in the node name
        var nodeNameEscaped = nodeName.replace(/[-[\]{}()*+!<=:?.\/\\^$|#\s,]/g, '\\$&');

        var patroon = new RegExp('^' + nodeNameEscaped + '->|->' + nodeNameEscaped + '$|' + nodeNameEscaped + '--|--' + nodeNameEscaped + '$')

        if (this.classList.contains("node-highlight")) {
            this.classList.remove("node-highlight");
            this.classList.remove("text-highlight-nodes");
            var edges = document.getElementsByClassName('edge');
            for (var i = 0; i < edges.length; i++) {
                if (patroon.test(edges[i].childNodes[1].textContent)) {
                    edges[i].classList.remove("edge-highlight");
                    edges[i].classList.remove("text-highlight-edges");
                }
            }
        } else {
            this.classList.add("node-highlight");
            this.classList.add("text-highlight-nodes");
            var edges = document.getElementsByClassName('edge');
            for (var i = 0; i < edges.length; i++) {
                if (patroon.test(edges[i].childNodes[1].textContent)) {
                    edges[i].classList.add("edge-highlight");
                    edges[i].classList.add("text-highlight-edges");
                    animateEdge(edges[i]);
                }
            }
        }
    }
}
function animateEdge(edge){
		var path = edge.querySelector('path');
		var polygon = edge.querySelector('polygon');
		var length = path.getTotalLength();
		// Clear any previous transition
		path.style.transition = path.style.WebkitTransition = 'none';
		if (polygon){polygon.style.transition = polygon.style.WebkitTransition = 'none';};
		// Set up the starting positions
		path.style.strokeDasharray = length + ' ' + length;
		path.style.strokeDashoffset = length;
		if(polygon){polygon.style.opacity='0';};
		// Trigger a layout so styles are calculated & the browser
		// picks up the starting position before animating
		path.getBoundingClientRect();
		// Define our transition
		path.style.transition = path.style.WebkitTransition =
		'stroke-dashoffset 2s ease-in-out';
		if (polygon){polygon.style.transition = polygon.style.WebkitTransition =
		'fill-opacity 1s ease-in-out 2s';};
		// Go!
		path.style.strokeDashoffset = '0';
        if (polygon){setTimeout(function(){polygon.style.opacity='1';},2000)};
	}
	function addzoomers(cluster){

		var bb = cluster.getBBox();
		var clusterx =  bb.x;
		var clustery =  bb.y;
		var clusterx = clusterx + (bb.width/2);
		addzoomer(cluster, clusterx, clustery, cluster.id)
		return;
	}

	function addzoomer(cluster, posx, posy, name){
		
		var element = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
		var zoomoutname = name + 'zoomout';
		element.setAttributeNS(null, 'id', zoomoutname);
		element.setAttributeNS(null, 'class', 'button');
		element.setAttributeNS(null, 'cx', posx);
		element.setAttributeNS(null, 'cy', posy);
		element.setAttributeNS(null, 'r', 10);
		var fctname = 'zoomOut()';
		element.setAttributeNS(null, 'onclick', fctname );
		cluster.appendChild(element);
		
		var element = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
		var zoominname = name + 'zoomin';
		element.setAttributeNS(null, 'id', zoominname);
		element.setAttributeNS(null, 'class', 'button');
		element.setAttributeNS(null, 'cx', posx +25);
		element.setAttributeNS(null, 'cy', posy);
		element.setAttributeNS(null, 'r', 10);
		var fctname = 'zoomIn(\''+name+'\')';
		element.setAttributeNS(null, 'onclick', fctname );
		cluster.appendChild(element);
		
		var element = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
		element.setAttributeNS(null, 'class', 'plus-minus');
		element.setAttributeNS(null, 'x', posx -4);
		element.setAttributeNS(null, 'y', posy-1);
		element.setAttributeNS(null, 'width', 8);
		element.setAttributeNS(null, 'height', 2);
		cluster.appendChild(element);
		
		var element = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
		element.setAttributeNS(null, 'class', 'plus-minus');
		element.setAttributeNS(null, 'x', posx +25-4);
		element.setAttributeNS(null, 'y', posy-1);
		element.setAttributeNS(null, 'width', 8);
		element.setAttributeNS(null, 'height', 2);
		cluster.appendChild(element);
		
		var element = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
		element.setAttributeNS(null, 'class', 'plus-minus');
		element.setAttributeNS(null, 'x', posx +25-1);
		element.setAttributeNS(null, 'y', posy-4);
		element.setAttributeNS(null, 'width', 2);
		element.setAttributeNS(null, 'height', 8);
		cluster.appendChild(element);

		return;
	}
}
var svg = document.querySelector('svg');
var viewBox = svg.viewBox.baseVal;
allShown=true;
function zoomIn(cluster) {
    svg.setAttributeNS(null, 'preserveAspectRatio', 'xMinYMin meet');
    var clusterelem = document.getElementById(cluster);
    var r = clusterelem.getBoundingClientRect();
    var r2 = clusterelem.getBBox();
    var pt = svg.createSVGPoint();
    pt.x = r.x;
    pt.y = r.y;
    pt = pt.matrixTransform(svg.getScreenCTM().inverse());

    var startViewBox = {
        x: viewBox.x,
        y: viewBox.y,
        width: viewBox.width,
        height: viewBox.height
    };

    var targetViewBox = {
        x: pt.x - 10,
        y: pt.y - 10,
        width: r2.width + 20,
        height: r2.height + 20
    };

    var animationDuration = 1500; // Adjust the duration as needed
    var startTime = performance.now();

    function animateZoom(timestamp) {
        var elapsed = timestamp - startTime;
        var progress = elapsed / animationDuration;

        if (progress >= 1) {
            viewBox.x = targetViewBox.x;
            viewBox.y = targetViewBox.y;
            viewBox.width = targetViewBox.width;
            viewBox.height = targetViewBox.height;
            svg.scrollTop = 0;
        } else {
            var easeProgress = 1 - Math.pow(1 - progress, 3); // Apply easing for smoother animation

            viewBox.x = startViewBox.x + (targetViewBox.x - startViewBox.x) * easeProgress;
            viewBox.y = startViewBox.y + (targetViewBox.y - startViewBox.y) * easeProgress;
            viewBox.width = startViewBox.width + (targetViewBox.width - startViewBox.width) * easeProgress;
            viewBox.height = startViewBox.height + (targetViewBox.height - startViewBox.height) * easeProgress;
            svg.scrollTop = svg.scrollTop -(svg.scrollTop * (easeProgress/10));

            requestAnimationFrame(animateZoom);
        }
    }

    requestAnimationFrame(animateZoom);
}
function zoomOut(){
    var svgrect = svg.getBBox();
	
    var startViewBox = {
        x: viewBox.x,
        y: viewBox.y,
        width: viewBox.width,
        height: viewBox.height
    };

    var targetViewBox = {
        x: 0,
        y: -60,
        width: svgrect.width,
        height: svgrect.height+60
    };

    var animationDuration = 1500; // Adjust the duration as needed
    var startTime = performance.now();

    function animateZoom(timestamp) {
        var elapsed = timestamp - startTime;
        var progress = elapsed / animationDuration;

        if (progress >= 1) {
            viewBox.x = targetViewBox.x;
            viewBox.y = targetViewBox.y;
            viewBox.width = targetViewBox.width;
            viewBox.height = targetViewBox.height;
            svg.scrollTop = 0;
        } else {
            var easeProgress = 1 - Math.pow(1 - progress, 3); // Apply easing for smoother animation

            viewBox.x = startViewBox.x + (targetViewBox.x - startViewBox.x) * easeProgress;
            viewBox.y = startViewBox.y + (targetViewBox.y - startViewBox.y) * easeProgress;
            viewBox.width = startViewBox.width + (targetViewBox.width - startViewBox.width) * easeProgress;
            viewBox.height = startViewBox.height + (targetViewBox.height - startViewBox.height) * easeProgress;

            requestAnimationFrame(animateZoom);
        }
    }

    requestAnimationFrame(animateZoom);	

}
function addToggleButtons(evt) {
  var svg = evt.target;
  classArray = [];
  currentClassIndex = 0;
  
  var uniqueClasses = new Set();
  var elements = document.getElementsByTagName("g");

  for (var i = 0; i < elements.length; i++) {

	var allclasses = elements[i].getAttribute("class");
	if (allclasses) {
		var classes = allclasses.split(" ");
		for (var j = 0; j < classes.length; j++) {
		  var currentClass = classes[j];
		  if (currentClass !== "graph" && !uniqueClasses.has(currentClass)) {
			uniqueClasses.add(currentClass);
			classArray.push(currentClass);
		  }
		}
	}
  }
  classArray.sort();
  
  var buttonContainer = document.createElementNS("http://www.w3.org/2000/svg", "g");
  buttonContainer.setAttribute("transform", "translate(10, -30)");
  buttonContainer.setAttributeNS(null, 'class', 'header');

 
  var header = document.createElementNS("http://www.w3.org/2000/svg", "text");
  header.setAttribute("x", 100);
  header.setAttribute("y", -10);
  header.setAttribute("text-anchor", "middle");
  header.setAttribute("font-size", "15px");
  header.setAttribute("fill", "black");
  header.textContent = "Toggle Visibility:";
  
  var prevButton = document.createElementNS("http://www.w3.org/2000/svg", "rect");
  prevButton.setAttribute("x", 0);
  prevButton.setAttribute("y", 0);
  prevButton.setAttribute("rx", 5);
  prevButton.setAttribute("width", 20);
  prevButton.setAttribute("height", 25);
  prevButton.setAttribute("fill", "lightgray");
  prevButton.setAttribute("stroke", "black");
  prevButton.setAttribute("onclick", "prevClass()");
  
  var prevButtonText = document.createElementNS("http://www.w3.org/2000/svg", "text");
  prevButtonText.setAttribute("id", "prevButtonText");
  prevButtonText.setAttribute("x", 10);
  prevButtonText.setAttribute("y", 18);
  prevButtonText.setAttribute("text-anchor", "middle");
  prevButtonText.setAttribute("font-size", "20px");
  prevButtonText.setAttribute("fill", "black");
  prevButtonText.setAttribute("onclick", "prevClass()");
  prevButtonText.textContent = "<";
  
  var nextButton = document.createElementNS("http://www.w3.org/2000/svg", "rect");
  nextButton.setAttribute("x", 300);
  nextButton.setAttribute("y", 0);
  nextButton.setAttribute("rx", 5);
  nextButton.setAttribute("width", 20);
  nextButton.setAttribute("height", 25);
  nextButton.setAttribute("fill", "lightgray");
  nextButton.setAttribute("stroke", "black");
  nextButton.setAttribute("onclick", "nextClass()");
  
  var nextButtonText = document.createElementNS("http://www.w3.org/2000/svg", "text");
  nextButtonText.setAttribute("id", "nextButtonText");
  nextButtonText.setAttribute("x", 310);
  nextButtonText.setAttribute("y", 18);
  nextButtonText.setAttribute("text-anchor", "middle");
  nextButtonText.setAttribute("font-size", "20px");
  nextButtonText.setAttribute("fill", "black");
  nextButtonText.setAttribute("onclick", "nextClass()");
  nextButtonText.textContent = ">";

  var toggleButton = document.createElementNS("http://www.w3.org/2000/svg", "rect");
  toggleButton.setAttribute("id", "toggleButton");
  toggleButton.setAttribute("x", 30);
  toggleButton.setAttribute("y", 0);
  toggleButton.setAttribute("rx", 5);
  toggleButton.setAttribute("width", 260);
  toggleButton.setAttribute("height", 25);
  toggleButton.setAttribute("fill", "#007bbf");
  toggleButton.setAttribute("stroke", "black");
  toggleButton.setAttribute("onclick", "toggleVisibility(classArray[currentClassIndex])");
  
  var toggleButtonText = document.createElementNS("http://www.w3.org/2000/svg", "text");
  toggleButtonText.setAttribute("id", "toggleButtonText");
  toggleButtonText.setAttribute("x", 160);
  toggleButtonText.setAttribute("y", 18);
  toggleButtonText.setAttribute("text-anchor", "middle");
  toggleButtonText.setAttribute("font-size", "17px");
  toggleButtonText.setAttribute("fill", "black");
  toggleButtonText.setAttribute("onclick", "toggleVisibility(classArray[currentClassIndex])");
  toggleButtonText.textContent = classArray[currentClassIndex];

  var allButton = document.createElementNS("http://www.w3.org/2000/svg", "rect");
  allButton.setAttribute("id", "allButton");
  allButton.setAttribute("x", 340);
  allButton.setAttribute("y", 0);
  allButton.setAttribute("width", 150);
  allButton.setAttribute("height", 25);
  allButton.setAttribute("fill", "#007bbf");
  allButton.setAttribute("stroke", "black");
  allButton.setAttribute("onclick", "toggleAll()");
  
  var allButtonText = document.createElementNS("http://www.w3.org/2000/svg", "text");
  allButtonText.setAttribute("id", "allButtonText");
  allButtonText.setAttribute("x", 415);
  allButtonText.setAttribute("y", 18);
  allButtonText.setAttribute("text-anchor", "middle");
  allButtonText.setAttribute("font-size", "20px");
  allButtonText.setAttribute("fill", "black");
  allButtonText.setAttribute("onclick", "toggleAll()");
  allButtonText.textContent = "Hide/show All";

  buttonContainer.appendChild(header);
  buttonContainer.appendChild(prevButton);
  buttonContainer.appendChild(prevButtonText);
  buttonContainer.appendChild(nextButton);
  buttonContainer.appendChild(nextButtonText);
  buttonContainer.appendChild(toggleButton);
  buttonContainer.appendChild(toggleButtonText);
  buttonContainer.appendChild(allButton);
  buttonContainer.appendChild(allButtonText);
  adjustViewBox(svg);
  svg.appendChild(buttonContainer);
  updateButton();
  
}
function nextClass() {
  currentClassIndex = (currentClassIndex + 1) % classArray.length;
  updateButton();
}

function prevClass() {
  currentClassIndex = (currentClassIndex - 1 + classArray.length) % classArray.length;
  updateButton();
}

function updateButton() {
  var buttonText = document.getElementById("toggleButtonText");
  var button = document.getElementById("toggleButton");
  buttonText.textContent = classArray[currentClassIndex];
  elements=document.getElementsByClassName(classArray[currentClassIndex]);
  
   if (elements[0].style.visibility === "hidden"){
	button.setAttribute("fill", "lightblue");
	}
   else{
	button.setAttribute("fill", "#007bbf");};
   
}
function toggleVisibility(className) {
  var elements = document.getElementsByClassName(className);


  for (var i = 0; i < elements.length; i++) {
    if (elements[i].style.visibility === "hidden") {
      elements[i].style.visibility = "visible";

    } else {
      elements[i].style.visibility = "hidden";
    }
  }
  updateButton();
}
function toggleAll(){
  
  for (var i = 0; i < classArray.length; i++) {
  var elements = document.getElementsByClassName(classArray[i]);
  for (var j = 0; j < elements.length; j++) {
    if (allShown) {
      elements[j].style.visibility = "hidden";

    } else {
      elements[j].style.visibility = "visible";
    }
  }
  
  }
 updateButton();
//update showall button
 var button = document.getElementById("allButton");
 if (allShown){ 
	button.setAttribute("fill", "lightblue");
 }
 else{
    button.setAttribute("fill", "#007bbf");
 }
 allShown = !allShown;
}

function adjustViewBox(svg) {
  
 
  var viewBoxParts = svg.getAttribute("viewBox").split(" ");
  var newYMin = parseFloat(viewBoxParts[1]) - 60; // Adjust this value as needed
  var newYMax = parseFloat(viewBoxParts[3]) + 60; // Adjust this value as needed
  var newXMax = Math.max(parseFloat(viewBoxParts[2]),240);
  var newViewBox = viewBoxParts[0] + " " + newYMin + " " + newXMax + " " + newYMax;
  svg.setAttribute("viewBox", newViewBox);
}

]]>
</script>

<!-- Excel to Graphviz - End -->

</svg>


