<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 11.0.0 (20240428.1522)
 -->
<!-- Title: Relationship Visualizer Pages: 1 -->
<svg width="822pt" height="1041pt"
 viewBox="0.00 0.00 822.08 1040.75" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" onload="addInteractivity(evt)">
  <!-- NOTE: The graphviz-generated content in this file has been modified by Excel to Graphviz Version: 7.0.00 (Win + macOS) -->

<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1036.75)">
<title>Relationship Visualizer</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-1036.75 818.08,-1036.75 818.08,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_1</title>
<g id="a_clust1"><a xlink:title="Deployment Overview">
<polygon fill="none" stroke="black" stroke-width="2" points="0,0 0,-1032.75 814.08,-1032.75 814.08,0 0,0"/>
<text text-anchor="middle" x="407.04" y="-1013.55" font-family="Arial Bold" font-size="16.00">Deployment Overview</text>
</a>
</g>
</g>
<g id="clust2" class="cluster">
<title>cluster_2</title>
<g id="a_clust2"><a xlink:title="Internet">
<polygon fill="#deebf7" stroke="black" points="309,-862 309,-1000.75 505.01,-1000.75 505.01,-862 309,-862"/>
<text text-anchor="middle" x="407.01" y="-985.35" font-family="Arial Bold" font-size="12.00">Internet</text>
</a>
</g>
</g>
<g id="clust3" class="cluster">
<title>cluster_3</title>
<g id="a_clust3"><a xlink:title="Internet">
<polygon fill="#e5f5e0" stroke="black" points="315,-868 315,-972.5 499.01,-972.5 499.01,-868 315,-868"/>
<text text-anchor="middle" x="407.01" y="-957.1" font-family="Arial Bold" font-size="12.00">Internet_internet</text>
</a>
</g>
</g>
<g id="clust4" class="cluster">
<title>cluster_4</title>
<g id="a_clust4"><a xlink:title="End user laptop">
<polygon fill="#fee6ce" stroke="black" points="321,-874 321,-944.25 493.01,-944.25 493.01,-874 321,-874"/>
<text text-anchor="middle" x="407.01" y="-928.85" font-family="Arial Bold" font-size="12.00">End user laptop</text>
</a>
</g>
</g>
<g id="clust5" class="cluster">
<title>cluster_5</title>
<g id="a_clust5"><a xlink:title="On Premise">
<polygon fill="#deebf7" stroke="black" points="6,-485 6,-849.75 808.08,-849.75 808.08,-485 6,-485"/>
<text text-anchor="middle" x="407.04" y="-834.35" font-family="Arial Bold" font-size="12.00">On Premise</text>
</a>
</g>
</g>
<g id="clust6" class="cluster">
<title>cluster_6</title>
<g id="a_clust6"><a xlink:title="On Premise">
<polygon fill="#e5f5e0" stroke="black" points="12,-491 12,-821.5 401.08,-821.5 401.08,-491 12,-491"/>
<text text-anchor="middle" x="206.54" y="-806.1" font-family="Arial Bold" font-size="12.00">BE_Datacentre 1</text>
</a>
</g>
</g>
<g id="clust7" class="cluster">
<title>cluster_7</title>
<g id="a_clust7"><a xlink:title="firewall 1">
<polygon fill="#fee6ce" stroke="black" points="88,-497 88,-567.25 174.18,-567.25 174.18,-497 88,-497"/>
<text text-anchor="middle" x="131.09" y="-551.85" font-family="Arial Bold" font-size="12.00">firewall 1</text>
</a>
</g>
</g>
<g id="clust8" class="cluster">
<title>cluster_8</title>
<g id="a_clust8"><a xlink:title="host01 Linux">
<polygon fill="#fee6ce" stroke="black" points="18,-579 18,-793.25 244.9,-793.25 244.9,-579 18,-579"/>
<text text-anchor="middle" x="131.45" y="-777.85" font-family="Arial Bold" font-size="12.00">host01</text>
</a>
</g>
</g>
<g id="clust9" class="cluster">
<title>cluster_9</title>
<g id="a_clust9"><a xlink:title="Load balancer 1">
<polygon fill="#fee6ce" stroke="black" points="256,-723 256,-793.25 395.08,-793.25 395.08,-723 256,-723"/>
<text text-anchor="middle" x="325.54" y="-777.85" font-family="Arial Bold" font-size="12.00">Load balancer 1</text>
</a>
</g>
</g>
<g id="clust10" class="cluster">
<title>cluster_10</title>
<g id="a_clust10"><a xlink:title="On Premise">
<polygon fill="#e5f5e0" stroke="black" points="413,-491 413,-821.5 802.08,-821.5 802.08,-491 413,-491"/>
<text text-anchor="middle" x="607.54" y="-806.1" font-family="Arial Bold" font-size="12.00">BE_Datacentre 2</text>
</a>
</g>
</g>
<g id="clust11" class="cluster">
<title>cluster_11</title>
<g id="a_clust11"><a xlink:title="firewall 2">
<polygon fill="#fee6ce" stroke="black" points="489,-497 489,-567.25 575.18,-567.25 575.18,-497 489,-497"/>
<text text-anchor="middle" x="532.09" y="-551.85" font-family="Arial Bold" font-size="12.00">firewall 2</text>
</a>
</g>
</g>
<g id="clust12" class="cluster">
<title>cluster_12</title>
<g id="a_clust12"><a xlink:title="host02 Linux">
<polygon fill="#fee6ce" stroke="black" points="419,-579 419,-793.25 645.9,-793.25 645.9,-579 419,-579"/>
<text text-anchor="middle" x="532.45" y="-777.85" font-family="Arial Bold" font-size="12.00">host02</text>
</a>
</g>
</g>
<g id="clust13" class="cluster">
<title>cluster_13</title>
<g id="a_clust13"><a xlink:title="Load balancer 2">
<polygon fill="#fee6ce" stroke="black" points="657,-723 657,-793.25 796.08,-793.25 796.08,-723 657,-723"/>
<text text-anchor="middle" x="726.54" y="-777.85" font-family="Arial Bold" font-size="12.00">Load balancer 2</text>
</a>
</g>
</g>
<g id="clust14" class="cluster">
<title>cluster_14</title>
<g id="a_clust14"><a xlink:title="Cloud">
<polygon fill="#deebf7" stroke="black" points="130,-6 130,-473.75 682.75,-473.75 682.75,-6 130,-6"/>
<text text-anchor="middle" x="406.38" y="-458.35" font-family="Arial Bold" font-size="12.00">Cloud</text>
</a>
</g>
</g>
<g id="clust15" class="cluster">
<title>cluster_15</title>
<g id="a_clust15"><a xlink:title="Cloud">
<polygon fill="#e5f5e0" stroke="black" points="136,-341 136,-445.5 400.75,-445.5 400.75,-341 136,-341"/>
<text text-anchor="middle" x="268.38" y="-430.1" font-family="Arial Bold" font-size="12.00">BE_metro1</text>
</a>
</g>
</g>
<g id="clust16" class="cluster">
<title>cluster_16</title>
<g id="a_clust16"><a xlink:title="Cloud firewall 1">
<polygon fill="#fee6ce" stroke="black" points="295,-347 295,-417.25 394.75,-417.25 394.75,-347 295,-347"/>
<text text-anchor="middle" x="344.88" y="-401.85" font-family="Arial Bold" font-size="12.00">Cloud firewall 1</text>
</a>
</g>
</g>
<g id="clust17" class="cluster">
<title>cluster_17</title>
<g id="a_clust17"><a xlink:title="Cloud Load balancer 1">
<polygon fill="#fee6ce" stroke="black" points="142,-347 142,-417.25 283,-417.25 283,-347 142,-347"/>
<text text-anchor="middle" x="212.5" y="-401.85" font-family="Arial Bold" font-size="12.00">Cloud Load balancer 1</text>
</a>
</g>
</g>
<g id="clust18" class="cluster">
<title>cluster_18</title>
<g id="a_clust18"><a xlink:title="Cloud">
<polygon fill="#e5f5e0" stroke="black" points="412,-341 412,-445.5 676.75,-445.5 676.75,-341 412,-341"/>
<text text-anchor="middle" x="544.38" y="-430.1" font-family="Arial Bold" font-size="12.00">BE_metro2</text>
</a>
</g>
</g>
<g id="clust19" class="cluster">
<title>cluster_19</title>
<g id="a_clust19"><a xlink:title="Cloud firewall 2">
<polygon fill="#fee6ce" stroke="black" points="571,-347 571,-417.25 670.75,-417.25 670.75,-347 571,-347"/>
<text text-anchor="middle" x="620.88" y="-401.85" font-family="Arial Bold" font-size="12.00">Cloud firewall 2</text>
</a>
</g>
</g>
<g id="clust20" class="cluster">
<title>cluster_20</title>
<g id="a_clust20"><a xlink:title="Cloud Load balancer 2">
<polygon fill="#fee6ce" stroke="black" points="418,-347 418,-417.25 559,-417.25 559,-347 418,-347"/>
<text text-anchor="middle" x="488.5" y="-401.85" font-family="Arial Bold" font-size="12.00">Cloud Load balancer 2</text>
</a>
</g>
</g>
<g id="clust21" class="cluster">
<title>cluster_21</title>
<g id="a_clust21"><a xlink:title="Cloud">
<polygon fill="#e5f5e0" stroke="black" points="167,-128 167,-328.5 368.98,-328.5 368.98,-128 167,-128"/>
<text text-anchor="middle" x="267.99" y="-313.1" font-family="Arial Bold" font-size="12.00">DE Frankfurt_AZ 1</text>
</a>
</g>
</g>
<g id="clust22" class="cluster">
<title>cluster_22</title>
<g id="a_clust22"><a xlink:title="host03 AWS Linux">
<polygon fill="#fee6ce" stroke="black" points="173,-134 173,-300.25 362.98,-300.25 362.98,-134 173,-134"/>
<text text-anchor="middle" x="267.99" y="-284.85" font-family="Arial Bold" font-size="12.00">host03</text>
</a>
</g>
</g>
<g id="clust23" class="cluster">
<title>cluster_23</title>
<g id="a_clust23"><a xlink:title="Cloud">
<polygon fill="#e5f5e0" stroke="black" points="444,-128 444,-328.5 645.98,-328.5 645.98,-128 444,-128"/>
<text text-anchor="middle" x="544.99" y="-313.1" font-family="Arial Bold" font-size="12.00">DE Frankfurt_AZ 2</text>
</a>
</g>
</g>
<g id="clust24" class="cluster">
<title>cluster_24</title>
<g id="a_clust24"><a xlink:title="host04 AWS Linux">
<polygon fill="#fee6ce" stroke="black" points="450,-134 450,-300.25 639.98,-300.25 639.98,-134 450,-134"/>
<text text-anchor="middle" x="544.99" y="-284.85" font-family="Arial Bold" font-size="12.00">host04</text>
</a>
</g>
</g>
<g id="clust25" class="cluster">
<title>cluster_25</title>
<g id="a_clust25"><a xlink:title="Cloud">
<polygon fill="#e5f5e0" stroke="black" points="153,-12 153,-116.5 382.92,-116.5 382.92,-12 153,-12"/>
<text text-anchor="middle" x="267.96" y="-101.1" font-family="Arial Bold" font-size="12.00">IR_Dublin1</text>
</a>
</g>
</g>
<g id="clust26" class="cluster">
<title>cluster_26</title>
<g id="a_clust26"><a xlink:title="Salesofrce SAAS environment hosted EU">
<polygon fill="#fee6ce" stroke="black" points="159,-18 159,-88.25 376.92,-88.25 376.92,-18 159,-18"/>
<text text-anchor="middle" x="267.96" y="-72.85" font-family="Arial Bold" font-size="12.00">SAAS Salesforce 1</text>
</a>
</g>
</g>
<g id="clust27" class="cluster">
<title>cluster_27</title>
<g id="a_clust27"><a xlink:title="Cloud">
<polygon fill="#e5f5e0" stroke="black" points="430,-12 430,-116.5 659.92,-116.5 659.92,-12 430,-12"/>
<text text-anchor="middle" x="544.96" y="-101.1" font-family="Arial Bold" font-size="12.00">IR_Dublin2</text>
</a>
</g>
</g>
<g id="clust28" class="cluster">
<title>cluster_28</title>
<g id="a_clust28"><a xlink:title="Salesofrce SAAS environment hosted EU">
<polygon fill="#fee6ce" stroke="black" points="436,-18 436,-88.25 653.92,-88.25 653.92,-18 436,-18"/>
<text text-anchor="middle" x="544.96" y="-72.85" font-family="Arial Bold" font-size="12.00">SAAS Salesforce 2</text>
</a>
</g>
</g>
<!-- InternetEnd user laptopCustomer browser -->
<g id="node1" class="node">
<title>InternetEnd user laptopCustomer browser</title>
<ellipse fill="none" stroke="black" cx="407.01" cy="-898" rx="80.01" ry="18"/>
<text text-anchor="middle" x="407.01" y="-892.58" font-family="Times New Roman,serif" font-size="14.00">Customer browser</text>
</g>
<!-- BEfirewall 1firewall -->
<g id="node2" class="node">
<title>BEfirewall 1firewall</title>
<g id="a_node2"><a xlink:title="firewall 1">
<ellipse fill="none" stroke="black" cx="131.09" cy="-521" rx="37.09" ry="18"/>
<text text-anchor="middle" x="131.09" y="-515.58" font-family="Times New Roman,serif" font-size="14.00">firewall</text>
</a>
</g>
</g>
<!-- BEhost01order activation system -->
<g id="node3" class="node">
<title>BEhost01order activation system</title>
<g id="a_node3"><a xlink:title="host01 Linux">
<ellipse fill="none" stroke="black" cx="130.97" cy="-603" rx="96.97" ry="18"/>
<text text-anchor="middle" x="130.97" y="-597.58" font-family="Times New Roman,serif" font-size="14.00">order activation system</text>
</a>
</g>
</g>
<!-- BEhost01order approval -->
<g id="node4" class="node">
<title>BEhost01order approval</title>
<g id="a_node4"><a xlink:title="host01 Linux">
<ellipse fill="none" stroke="black" cx="130.53" cy="-747" rx="65.53" ry="18"/>
<text text-anchor="middle" x="130.53" y="-741.58" font-family="Times New Roman,serif" font-size="14.00">order approval</text>
</a>
</g>
</g>
<!-- BEhost01order management system -->
<g id="node5" class="node">
<title>BEhost01order management system</title>
<g id="a_node5"><a xlink:title="host01 Linux">
<ellipse fill="none" stroke="black" cx="131.45" cy="-699" rx="107.45" ry="18"/>
<text text-anchor="middle" x="131.45" y="-693.58" font-family="Times New Roman,serif" font-size="14.00">order management system</text>
</a>
</g>
</g>
<!-- BEhost01order workflow -->
<g id="node6" class="node">
<title>BEhost01order workflow</title>
<g id="a_node6"><a xlink:title="host01 Linux">
<ellipse fill="none" stroke="black" cx="130.53" cy="-651" rx="68.53" ry="18"/>
<text text-anchor="middle" x="130.53" y="-645.58" font-family="Times New Roman,serif" font-size="14.00">order workflow</text>
</a>
</g>
</g>
<!-- BELoad balancer 1Load balancer -->
<g id="node7" class="node">
<title>BELoad balancer 1Load balancer</title>
<g id="a_node7"><a xlink:title="Load balancer 1">
<ellipse fill="none" stroke="black" cx="325.54" cy="-747" rx="63.54" ry="18"/>
<text text-anchor="middle" x="325.54" y="-741.58" font-family="Times New Roman,serif" font-size="14.00">Load balancer</text>
</a>
</g>
</g>
<!-- BEfirewall 2firewall -->
<g id="node8" class="node">
<title>BEfirewall 2firewall</title>
<g id="a_node8"><a xlink:title="firewall 2">
<ellipse fill="none" stroke="black" cx="532.09" cy="-521" rx="37.09" ry="18"/>
<text text-anchor="middle" x="532.09" y="-515.58" font-family="Times New Roman,serif" font-size="14.00">firewall</text>
</a>
</g>
</g>
<!-- BEhost02order activation system -->
<g id="node9" class="node">
<title>BEhost02order activation system</title>
<g id="a_node9"><a xlink:title="host02 Linux">
<ellipse fill="none" stroke="black" cx="531.97" cy="-603" rx="96.97" ry="18"/>
<text text-anchor="middle" x="531.97" y="-597.58" font-family="Times New Roman,serif" font-size="14.00">order activation system</text>
</a>
</g>
</g>
<!-- BEhost02order approval -->
<g id="node10" class="node">
<title>BEhost02order approval</title>
<g id="a_node10"><a xlink:title="host02 Linux">
<ellipse fill="none" stroke="black" cx="531.53" cy="-747" rx="65.53" ry="18"/>
<text text-anchor="middle" x="531.53" y="-741.58" font-family="Times New Roman,serif" font-size="14.00">order approval</text>
</a>
</g>
</g>
<!-- BEhost02order management system -->
<g id="node11" class="node">
<title>BEhost02order management system</title>
<g id="a_node11"><a xlink:title="host02 Linux">
<ellipse fill="none" stroke="black" cx="532.45" cy="-699" rx="107.45" ry="18"/>
<text text-anchor="middle" x="532.45" y="-693.58" font-family="Times New Roman,serif" font-size="14.00">order management system</text>
</a>
</g>
</g>
<!-- BEhost02order workflow -->
<g id="node12" class="node">
<title>BEhost02order workflow</title>
<g id="a_node12"><a xlink:title="host02 Linux">
<ellipse fill="none" stroke="black" cx="531.53" cy="-651" rx="68.53" ry="18"/>
<text text-anchor="middle" x="531.53" y="-645.58" font-family="Times New Roman,serif" font-size="14.00">order workflow</text>
</a>
</g>
</g>
<!-- BELoad balancer 2Load balancer -->
<g id="node13" class="node">
<title>BELoad balancer 2Load balancer</title>
<g id="a_node13"><a xlink:title="Load balancer 2">
<ellipse fill="none" stroke="black" cx="726.54" cy="-747" rx="63.54" ry="18"/>
<text text-anchor="middle" x="726.54" y="-741.58" font-family="Times New Roman,serif" font-size="14.00">Load balancer</text>
</a>
</g>
</g>
<!-- BECloud firewall 1firewall -->
<g id="node14" class="node">
<title>BECloud firewall 1firewall</title>
<g id="a_node14"><a xlink:title="Cloud firewall 1">
<ellipse fill="none" stroke="black" cx="344.88" cy="-371" rx="37.09" ry="18"/>
<text text-anchor="middle" x="344.88" y="-365.57" font-family="Times New Roman,serif" font-size="14.00">firewall</text>
</a>
</g>
</g>
<!-- BECloud Load balancer 1Load balancer -->
<g id="node15" class="node">
<title>BECloud Load balancer 1Load balancer</title>
<g id="a_node15"><a xlink:title="Cloud Load balancer 1">
<ellipse fill="none" stroke="black" cx="212.5" cy="-371" rx="63.54" ry="18"/>
<text text-anchor="middle" x="212.5" y="-365.57" font-family="Times New Roman,serif" font-size="14.00">Load balancer</text>
</a>
</g>
</g>
<!-- BECloud firewall 2firewall -->
<g id="node16" class="node">
<title>BECloud firewall 2firewall</title>
<g id="a_node16"><a xlink:title="Cloud firewall 2">
<ellipse fill="none" stroke="black" cx="620.88" cy="-371" rx="37.09" ry="18"/>
<text text-anchor="middle" x="620.88" y="-365.57" font-family="Times New Roman,serif" font-size="14.00">firewall</text>
</a>
</g>
</g>
<!-- BECloud Load balancer 2Load balancer -->
<g id="node17" class="node">
<title>BECloud Load balancer 2Load balancer</title>
<g id="a_node17"><a xlink:title="Cloud Load balancer 2">
<ellipse fill="none" stroke="black" cx="488.5" cy="-371" rx="63.54" ry="18"/>
<text text-anchor="middle" x="488.5" y="-365.57" font-family="Times New Roman,serif" font-size="14.00">Load balancer</text>
</a>
</g>
</g>
<!-- DE Frankfurthost03Customer portal -->
<g id="node18" class="node">
<title>DE Frankfurthost03Customer portal</title>
<g id="a_node18"><a xlink:title="host03 AWS Linux">
<ellipse fill="none" stroke="black" cx="267.02" cy="-158" rx="71.02" ry="18"/>
<text text-anchor="middle" x="267.02" y="-152.57" font-family="Times New Roman,serif" font-size="14.00">Customer portal</text>
</a>
</g>
</g>
<!-- DE Frankfurthost03notification center -->
<g id="node19" class="node">
<title>DE Frankfurthost03notification center</title>
<g id="a_node19"><a xlink:title="host03 AWS Linux">
<ellipse fill="none" stroke="black" cx="267.01" cy="-254" rx="77.01" ry="18"/>
<text text-anchor="middle" x="267.01" y="-248.57" font-family="Times New Roman,serif" font-size="14.00">notification center</text>
</a>
</g>
</g>
<!-- DE Frankfurthost03software downloader -->
<g id="node20" class="node">
<title>DE Frankfurthost03software downloader</title>
<g id="a_node20"><a xlink:title="host03 AWS Linux">
<ellipse fill="none" stroke="black" cx="267.99" cy="-206" rx="88.99" ry="18"/>
<text text-anchor="middle" x="267.99" y="-200.57" font-family="Times New Roman,serif" font-size="14.00">software downloader</text>
</a>
</g>
</g>
<!-- DE Frankfurthost04notification center -->
<g id="node21" class="node">
<title>DE Frankfurthost04notification center</title>
<g id="a_node21"><a xlink:title="host04 AWS Linux">
<ellipse fill="none" stroke="black" cx="544.01" cy="-158" rx="77.01" ry="18"/>
<text text-anchor="middle" x="544.01" y="-152.57" font-family="Times New Roman,serif" font-size="14.00">notification center</text>
</a>
</g>
</g>
<!-- DE Frankfurthost04Public website -->
<g id="node22" class="node">
<title>DE Frankfurthost04Public website</title>
<g id="a_node22"><a xlink:title="host04 AWS Linux">
<ellipse fill="none" stroke="black" cx="544.54" cy="-254" rx="64.54" ry="18"/>
<text text-anchor="middle" x="544.54" y="-248.57" font-family="Times New Roman,serif" font-size="14.00">Public website</text>
</a>
</g>
</g>
<!-- DE Frankfurthost04software downloader -->
<g id="node23" class="node">
<title>DE Frankfurthost04software downloader</title>
<g id="a_node23"><a xlink:title="host04 AWS Linux">
<ellipse fill="none" stroke="black" cx="544.99" cy="-206" rx="88.99" ry="18"/>
<text text-anchor="middle" x="544.99" y="-200.57" font-family="Times New Roman,serif" font-size="14.00">software downloader</text>
</a>
</g>
</g>
<!-- IRSAAS Salesforce 1Salesforce CRM module -->
<g id="node24" class="node">
<title>IRSAAS Salesforce 1Salesforce CRM module</title>
<g id="a_node24"><a xlink:title="Salesofrce SAAS environment hosted EU">
<ellipse fill="none" stroke="black" cx="267.96" cy="-42" rx="102.96" ry="18"/>
<text text-anchor="middle" x="267.96" y="-36.58" font-family="Times New Roman,serif" font-size="14.00">Salesforce CRM module</text>
</a>
</g>
</g>
<!-- IRSAAS Salesforce 2Salesforce CRM module -->
<g id="node25" class="node">
<title>IRSAAS Salesforce 2Salesforce CRM module</title>
<g id="a_node25"><a xlink:title="Salesofrce SAAS environment hosted EU">
<ellipse fill="none" stroke="black" cx="544.96" cy="-42" rx="102.96" ry="18"/>
<text text-anchor="middle" x="544.96" y="-36.58" font-family="Times New Roman,serif" font-size="14.00">Salesforce CRM module</text>
</a>
</g>
</g>
</g>

<!-- Excel to Graphviz - Begin -->
<style>

<!-- The first 2 styles are hiding longer description texts on 
     nodes and edges, that are shown when nodes are clicked 
.edge text{
    opacity: 0;
}
.node text:not(:first-of-type){
    opacity: 0;
}-->
.text-highlight-nodes text{
    opacity: 1 !important;
    stroke-width: 10;
    font-size: 20px;
    font-weight: bold;
    fill: black;
}
.text-highlight-edges text{
    opacity: 1 !important;
    stroke-width: 10;
    font-size: 20px;
    font-weight: bold;
    fill: Indigo;
}
.edge-highlight path{
    opacity: 1;
    stroke-width: 10;
    stroke: crimson;
}	
.edge-highlight polygon{
    opacity: 1;
    stroke-width: 10;
    stroke: crimson;
}
.node-highlight polygon{
    opacity: 1;
    stroke-width: 10;
    stroke: crimson;
    z-index:99999;	
}
.node-highlight ellipse{
    opacity: 1;
    stroke-width: 10;
    stroke: crimson;
    z-index:99999;	
}
.node-highlight path{
    opacity: 1;
    stroke-width: 10;
    stroke: crimson;
    z-index:99999;	
}
 .compass {
            fill: #fff;
            stroke: #000;
            stroke-width: 1;
        }
 .button {
            fill: #225EA8;
            stroke: #0C2C84;
            stroke-width: 0.5;
            stroke-miterlimit:6;
            stroke-linecap: round;
        }
 .button:hover {
            stroke-width: 1;
        }
 .plus-minus {
            fill: #fff;
            pointer-events: none;
        }
</style>
<script>
<![CDATA[
function addInteractivity(evt) {
    
	var svg = evt.target;
    var edges = document.getElementsByClassName('edge');
    var nodes = document.getElementsByClassName('node');
	var clusters = document.getElementsByClassName('cluster');
    var selectedElement, offset, transform, nodrag, origmousepos;

    svg.addEventListener('mousedown', startDrag);
    svg.addEventListener('mousemove', drag);
    svg.addEventListener('mouseup', endDrag);
    svg.addEventListener('mouseleave', endDrag);
    svg.addEventListener('touchstart', startDrag);
    svg.addEventListener('touchmove', drag);
    svg.addEventListener('touchend', endDrag);
    svg.addEventListener('touchleave', endDrag);
    svg.addEventListener('touchcancel', endDrag);

    for (var i = 0; i < edges.length; i++) {
        edges[i].addEventListener('click', clickEdge);
    }

    for (var i = 0; i < nodes.length; i++) {
        nodes[i].addEventListener('click', clickNode);
    } 
   addToggleButtons(evt);
    
	for (var i = 0; i < clusters.length; i++) {
        addzoomers(clusters[i]);
    } 
    function getMousePosition(evt) {
        var CTM = svg.getScreenCTM();
        if (evt.touches) { evt = evt.touches[0]; }
            return {
                x: (evt.clientX - CTM.e) / CTM.a,
                y: (evt.clientY - CTM.f) / CTM.d
        };
    }
       function startDrag(evt) {
        origmousepos = getMousePosition(evt);
        nodrag=true;
        selectedElement = evt.target.parentElement;
        if (selectedElement){
        offset = getMousePosition(evt);

        // Make sure the first transform on the element is a translate transform
        var transforms = selectedElement.transform.baseVal;

        if (transforms.length === 0 || transforms.getItem(0).type !== SVGTransform.SVG_TRANSFORM_TRANSLATE) {
            // Create an transform that translates by (0, 0)
            var translate = svg.createSVGTransform();
            translate.setTranslate(0, 0);
            selectedElement.transform.baseVal.insertItemBefore(translate, 0);
        }

        // Get initial translation
        transform = transforms.getItem(0);
        offset.x -= transform.matrix.e;
        offset.y -= transform.matrix.f;
		}
    }
    function drag(evt) {
        if (selectedElement) {
            evt.preventDefault();
            var coord = getMousePosition(evt);
            transform.setTranslate(coord.x - offset.x, coord.y - offset.y);
        }
    }
    function endDrag(evt) {
    <!-- comment out the following line if you wnat drags to stay in place, with this line they snap back to their original position after drag end -->   
//if statement to avoid the header section being affected of the translate (0,0)
        if (selectedElement){
			if (selectedElement.classList.contains('header')){
				selectedElement = false;
				} else {
				selectedElement = false;
				transform.setTranslate(0,0);
				}
		}		
		var currentmousepos=getMousePosition(evt);
		if (currentmousepos.x===origmousepos.x|currentmousepos.y===origmousepos.y){
			nodrag=true;
		} else {
			nodrag=false;
		}
		
	}
    function clickEdge() {
        if (nodrag) {
            if (this.classList.contains("edge-highlight")){
                this.classList.remove("edge-highlight");
                this.classList.remove("text-highlight-edges");
            }
            else {
                this.classList.add("edge-highlight");
                this.classList.add("text-highlight-edges");
                animateEdge(this);
            }
        }	
    }
function clickNode() {
    if (nodrag) {
        var nodeName = this.childNodes[1].textContent;
        // Escape special characters in the node name
        var nodeNameEscaped = nodeName.replace(/[-[\]{}()*+!<=:?.\/\\^$|#\s,]/g, '\\$&');

        var patroon = new RegExp('^' + nodeNameEscaped + '->|->' + nodeNameEscaped + '$|' + nodeNameEscaped + '--|--' + nodeNameEscaped + '$')

        if (this.classList.contains("node-highlight")) {
            this.classList.remove("node-highlight");
            this.classList.remove("text-highlight-nodes");
            var edges = document.getElementsByClassName('edge');
            for (var i = 0; i < edges.length; i++) {
                if (patroon.test(edges[i].childNodes[1].textContent)) {
                    edges[i].classList.remove("edge-highlight");
                    edges[i].classList.remove("text-highlight-edges");
                }
            }
        } else {
            this.classList.add("node-highlight");
            this.classList.add("text-highlight-nodes");
            var edges = document.getElementsByClassName('edge');
            for (var i = 0; i < edges.length; i++) {
                if (patroon.test(edges[i].childNodes[1].textContent)) {
                    edges[i].classList.add("edge-highlight");
                    edges[i].classList.add("text-highlight-edges");
                    animateEdge(edges[i]);
                }
            }
        }
    }
}
function animateEdge(edge){
		var path = edge.querySelector('path');
		var polygon = edge.querySelector('polygon');
		var length = path.getTotalLength();
		// Clear any previous transition
		path.style.transition = path.style.WebkitTransition = 'none';
		if (polygon){polygon.style.transition = polygon.style.WebkitTransition = 'none';};
		// Set up the starting positions
		path.style.strokeDasharray = length + ' ' + length;
		path.style.strokeDashoffset = length;
		if(polygon){polygon.style.opacity='0';};
		// Trigger a layout so styles are calculated & the browser
		// picks up the starting position before animating
		path.getBoundingClientRect();
		// Define our transition
		path.style.transition = path.style.WebkitTransition =
		'stroke-dashoffset 2s ease-in-out';
		if (polygon){polygon.style.transition = polygon.style.WebkitTransition =
		'fill-opacity 1s ease-in-out 2s';};
		// Go!
		path.style.strokeDashoffset = '0';
        if (polygon){setTimeout(function(){polygon.style.opacity='1';},2000)};
	}
	function addzoomers(cluster){

		var bb = cluster.getBBox();
		var clusterx =  bb.x;
		var clustery =  bb.y;
		var clusterx = clusterx + (bb.width/2);
		addzoomer(cluster, clusterx, clustery, cluster.id)
		return;
	}

	function addzoomer(cluster, posx, posy, name){
		
		var element = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
		var zoomoutname = name + 'zoomout';
		element.setAttributeNS(null, 'id', zoomoutname);
		element.setAttributeNS(null, 'class', 'button');
		element.setAttributeNS(null, 'cx', posx);
		element.setAttributeNS(null, 'cy', posy);
		element.setAttributeNS(null, 'r', 10);
		var fctname = 'zoomOut()';
		element.setAttributeNS(null, 'onclick', fctname );
		cluster.appendChild(element);
		
		var element = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
		var zoominname = name + 'zoomin';
		element.setAttributeNS(null, 'id', zoominname);
		element.setAttributeNS(null, 'class', 'button');
		element.setAttributeNS(null, 'cx', posx +25);
		element.setAttributeNS(null, 'cy', posy);
		element.setAttributeNS(null, 'r', 10);
		var fctname = 'zoomIn(\''+name+'\')';
		element.setAttributeNS(null, 'onclick', fctname );
		cluster.appendChild(element);
		
		var element = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
		element.setAttributeNS(null, 'class', 'plus-minus');
		element.setAttributeNS(null, 'x', posx -4);
		element.setAttributeNS(null, 'y', posy-1);
		element.setAttributeNS(null, 'width', 8);
		element.setAttributeNS(null, 'height', 2);
		cluster.appendChild(element);
		
		var element = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
		element.setAttributeNS(null, 'class', 'plus-minus');
		element.setAttributeNS(null, 'x', posx +25-4);
		element.setAttributeNS(null, 'y', posy-1);
		element.setAttributeNS(null, 'width', 8);
		element.setAttributeNS(null, 'height', 2);
		cluster.appendChild(element);
		
		var element = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
		element.setAttributeNS(null, 'class', 'plus-minus');
		element.setAttributeNS(null, 'x', posx +25-1);
		element.setAttributeNS(null, 'y', posy-4);
		element.setAttributeNS(null, 'width', 2);
		element.setAttributeNS(null, 'height', 8);
		cluster.appendChild(element);

		return;
	}
}
var svg = document.querySelector('svg');
var viewBox = svg.viewBox.baseVal;
allShown=true;
function zoomIn(cluster) {
    svg.setAttributeNS(null, 'preserveAspectRatio', 'xMinYMin meet');
    var clusterelem = document.getElementById(cluster);
    var r = clusterelem.getBoundingClientRect();
    var r2 = clusterelem.getBBox();
    var pt = svg.createSVGPoint();
    pt.x = r.x;
    pt.y = r.y;
    pt = pt.matrixTransform(svg.getScreenCTM().inverse());

    var startViewBox = {
        x: viewBox.x,
        y: viewBox.y,
        width: viewBox.width,
        height: viewBox.height
    };

    var targetViewBox = {
        x: pt.x - 10,
        y: pt.y - 10,
        width: r2.width + 20,
        height: r2.height + 20
    };

    var animationDuration = 1500; // Adjust the duration as needed
    var startTime = performance.now();

    function animateZoom(timestamp) {
        var elapsed = timestamp - startTime;
        var progress = elapsed / animationDuration;

        if (progress >= 1) {
            viewBox.x = targetViewBox.x;
            viewBox.y = targetViewBox.y;
            viewBox.width = targetViewBox.width;
            viewBox.height = targetViewBox.height;
            svg.scrollTop = 0;
        } else {
            var easeProgress = 1 - Math.pow(1 - progress, 3); // Apply easing for smoother animation

            viewBox.x = startViewBox.x + (targetViewBox.x - startViewBox.x) * easeProgress;
            viewBox.y = startViewBox.y + (targetViewBox.y - startViewBox.y) * easeProgress;
            viewBox.width = startViewBox.width + (targetViewBox.width - startViewBox.width) * easeProgress;
            viewBox.height = startViewBox.height + (targetViewBox.height - startViewBox.height) * easeProgress;
            svg.scrollTop = svg.scrollTop -(svg.scrollTop * (easeProgress/10));

            requestAnimationFrame(animateZoom);
        }
    }

    requestAnimationFrame(animateZoom);
}
function zoomOut(){
    var svgrect = svg.getBBox();
	
    var startViewBox = {
        x: viewBox.x,
        y: viewBox.y,
        width: viewBox.width,
        height: viewBox.height
    };

    var targetViewBox = {
        x: 0,
        y: -60,
        width: svgrect.width,
        height: svgrect.height+60
    };

    var animationDuration = 1500; // Adjust the duration as needed
    var startTime = performance.now();

    function animateZoom(timestamp) {
        var elapsed = timestamp - startTime;
        var progress = elapsed / animationDuration;

        if (progress >= 1) {
            viewBox.x = targetViewBox.x;
            viewBox.y = targetViewBox.y;
            viewBox.width = targetViewBox.width;
            viewBox.height = targetViewBox.height;
            svg.scrollTop = 0;
        } else {
            var easeProgress = 1 - Math.pow(1 - progress, 3); // Apply easing for smoother animation

            viewBox.x = startViewBox.x + (targetViewBox.x - startViewBox.x) * easeProgress;
            viewBox.y = startViewBox.y + (targetViewBox.y - startViewBox.y) * easeProgress;
            viewBox.width = startViewBox.width + (targetViewBox.width - startViewBox.width) * easeProgress;
            viewBox.height = startViewBox.height + (targetViewBox.height - startViewBox.height) * easeProgress;

            requestAnimationFrame(animateZoom);
        }
    }

    requestAnimationFrame(animateZoom);	

}
function addToggleButtons(evt) {
  var svg = evt.target;
  classArray = [];
  currentClassIndex = 0;
  
  var uniqueClasses = new Set();
  var elements = document.getElementsByTagName("g");

  for (var i = 0; i < elements.length; i++) {

	var allclasses = elements[i].getAttribute("class");
	if (allclasses) {
		var classes = allclasses.split(" ");
		for (var j = 0; j < classes.length; j++) {
		  var currentClass = classes[j];
		  if (currentClass !== "graph" && !uniqueClasses.has(currentClass)) {
			uniqueClasses.add(currentClass);
			classArray.push(currentClass);
		  }
		}
	}
  }
  classArray.sort();
  
  var buttonContainer = document.createElementNS("http://www.w3.org/2000/svg", "g");
  buttonContainer.setAttribute("transform", "translate(10, -30)");
  buttonContainer.setAttributeNS(null, 'class', 'header');

 
  var header = document.createElementNS("http://www.w3.org/2000/svg", "text");
  header.setAttribute("x", 100);
  header.setAttribute("y", -10);
  header.setAttribute("text-anchor", "middle");
  header.setAttribute("font-size", "15px");
  header.setAttribute("fill", "black");
  header.textContent = "Toggle Visibility:";
  
  var prevButton = document.createElementNS("http://www.w3.org/2000/svg", "rect");
  prevButton.setAttribute("x", 0);
  prevButton.setAttribute("y", 0);
  prevButton.setAttribute("rx", 5);
  prevButton.setAttribute("width", 20);
  prevButton.setAttribute("height", 25);
  prevButton.setAttribute("fill", "lightgray");
  prevButton.setAttribute("stroke", "black");
  prevButton.setAttribute("onclick", "prevClass()");
  
  var prevButtonText = document.createElementNS("http://www.w3.org/2000/svg", "text");
  prevButtonText.setAttribute("id", "prevButtonText");
  prevButtonText.setAttribute("x", 10);
  prevButtonText.setAttribute("y", 18);
  prevButtonText.setAttribute("text-anchor", "middle");
  prevButtonText.setAttribute("font-size", "20px");
  prevButtonText.setAttribute("fill", "black");
  prevButtonText.setAttribute("onclick", "prevClass()");
  prevButtonText.textContent = "<";
  
  var nextButton = document.createElementNS("http://www.w3.org/2000/svg", "rect");
  nextButton.setAttribute("x", 300);
  nextButton.setAttribute("y", 0);
  nextButton.setAttribute("rx", 5);
  nextButton.setAttribute("width", 20);
  nextButton.setAttribute("height", 25);
  nextButton.setAttribute("fill", "lightgray");
  nextButton.setAttribute("stroke", "black");
  nextButton.setAttribute("onclick", "nextClass()");
  
  var nextButtonText = document.createElementNS("http://www.w3.org/2000/svg", "text");
  nextButtonText.setAttribute("id", "nextButtonText");
  nextButtonText.setAttribute("x", 310);
  nextButtonText.setAttribute("y", 18);
  nextButtonText.setAttribute("text-anchor", "middle");
  nextButtonText.setAttribute("font-size", "20px");
  nextButtonText.setAttribute("fill", "black");
  nextButtonText.setAttribute("onclick", "nextClass()");
  nextButtonText.textContent = ">";

  var toggleButton = document.createElementNS("http://www.w3.org/2000/svg", "rect");
  toggleButton.setAttribute("id", "toggleButton");
  toggleButton.setAttribute("x", 30);
  toggleButton.setAttribute("y", 0);
  toggleButton.setAttribute("rx", 5);
  toggleButton.setAttribute("width", 260);
  toggleButton.setAttribute("height", 25);
  toggleButton.setAttribute("fill", "#007bbf");
  toggleButton.setAttribute("stroke", "black");
  toggleButton.setAttribute("onclick", "toggleVisibility(classArray[currentClassIndex])");
  
  var toggleButtonText = document.createElementNS("http://www.w3.org/2000/svg", "text");
  toggleButtonText.setAttribute("id", "toggleButtonText");
  toggleButtonText.setAttribute("x", 160);
  toggleButtonText.setAttribute("y", 18);
  toggleButtonText.setAttribute("text-anchor", "middle");
  toggleButtonText.setAttribute("font-size", "17px");
  toggleButtonText.setAttribute("fill", "black");
  toggleButtonText.setAttribute("onclick", "toggleVisibility(classArray[currentClassIndex])");
  toggleButtonText.textContent = classArray[currentClassIndex];

  var allButton = document.createElementNS("http://www.w3.org/2000/svg", "rect");
  allButton.setAttribute("id", "allButton");
  allButton.setAttribute("x", 340);
  allButton.setAttribute("y", 0);
  allButton.setAttribute("width", 150);
  allButton.setAttribute("height", 25);
  allButton.setAttribute("fill", "#007bbf");
  allButton.setAttribute("stroke", "black");
  allButton.setAttribute("onclick", "toggleAll()");
  
  var allButtonText = document.createElementNS("http://www.w3.org/2000/svg", "text");
  allButtonText.setAttribute("id", "allButtonText");
  allButtonText.setAttribute("x", 415);
  allButtonText.setAttribute("y", 18);
  allButtonText.setAttribute("text-anchor", "middle");
  allButtonText.setAttribute("font-size", "20px");
  allButtonText.setAttribute("fill", "black");
  allButtonText.setAttribute("onclick", "toggleAll()");
  allButtonText.textContent = "Hide/show All";

  buttonContainer.appendChild(header);
  buttonContainer.appendChild(prevButton);
  buttonContainer.appendChild(prevButtonText);
  buttonContainer.appendChild(nextButton);
  buttonContainer.appendChild(nextButtonText);
  buttonContainer.appendChild(toggleButton);
  buttonContainer.appendChild(toggleButtonText);
  buttonContainer.appendChild(allButton);
  buttonContainer.appendChild(allButtonText);
  adjustViewBox(svg);
  svg.appendChild(buttonContainer);
  updateButton();
  
}
function nextClass() {
  currentClassIndex = (currentClassIndex + 1) % classArray.length;
  updateButton();
}

function prevClass() {
  currentClassIndex = (currentClassIndex - 1 + classArray.length) % classArray.length;
  updateButton();
}

function updateButton() {
  var buttonText = document.getElementById("toggleButtonText");
  var button = document.getElementById("toggleButton");
  buttonText.textContent = classArray[currentClassIndex];
  elements=document.getElementsByClassName(classArray[currentClassIndex]);
  
   if (elements[0].style.visibility === "hidden"){
	button.setAttribute("fill", "lightblue");
	}
   else{
	button.setAttribute("fill", "#007bbf");};
   
}
function toggleVisibility(className) {
  var elements = document.getElementsByClassName(className);


  for (var i = 0; i < elements.length; i++) {
    if (elements[i].style.visibility === "hidden") {
      elements[i].style.visibility = "visible";

    } else {
      elements[i].style.visibility = "hidden";
    }
  }
  updateButton();
}
function toggleAll(){
  
  for (var i = 0; i < classArray.length; i++) {
  var elements = document.getElementsByClassName(classArray[i]);
  for (var j = 0; j < elements.length; j++) {
    if (allShown) {
      elements[j].style.visibility = "hidden";

    } else {
      elements[j].style.visibility = "visible";
    }
  }
  
  }
 updateButton();
//update showall button
 var button = document.getElementById("allButton");
 if (allShown){ 
	button.setAttribute("fill", "lightblue");
 }
 else{
    button.setAttribute("fill", "#007bbf");
 }
 allShown = !allShown;
}

function adjustViewBox(svg) {
  
 
  var viewBoxParts = svg.getAttribute("viewBox").split(" ");
  var newYMin = parseFloat(viewBoxParts[1]) - 60; // Adjust this value as needed
  var newYMax = parseFloat(viewBoxParts[3]) + 60; // Adjust this value as needed
  var newXMax = Math.max(parseFloat(viewBoxParts[2]),240);
  var newViewBox = viewBoxParts[0] + " " + newYMin + " " + newXMax + " " + newYMax;
  svg.setAttribute("viewBox", newViewBox);
}

]]>
</script>

<!-- Excel to Graphviz - End -->

</svg>


